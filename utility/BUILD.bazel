load("@io_bazel_rules_kotlin//kotlin:kotlin.bzl", "kt_android_library")
load("@rules_jvm_external//:defs.bzl", "artifact")
load("@dagger//:workspace_defs.bzl", "dagger_rules")

package(default_visibility = ["//visibility:public"])

kt_android_library(
    name = "utility_lib",
    custom_package = "org.oppia.util",
    srcs = glob(["src/main/**/*.kt"]),
    resource_files = glob(["src/main/res/**/*.xml", "src/main/res/**/*.png"]),
    manifest = "src/main/AndroidManifest.xml",
    deps = [
        ":dagger",
        artifact("org.jetbrains.kotlinx:kotlinx-coroutines-core"),
        artifact("org.jetbrains.kotlinx:kotlinx-coroutines-android"),
        artifact("androidx.appcompat:appcompat:1.0.2"),
    ],
)

#TODO: Get android_local_test working with kotlin files
'''
kt_android_library(
    name = "test_lib",
    custom_package = "org.oppia.util",
    srcs = glob(["src/test/**/*.kt"]),
    resource_files = glob(["src/main/res/**/*.xml", "src/main/res/**/*.png"]),
    manifest = "src/main/AndroidManifest.xml",
    deps = [
        ":dagger",
        ":utility_lib",
        artifact("org.jetbrains.kotlinx:kotlinx-coroutines-core"),
        artifact("org.jetbrains.kotlinx:kotlinx-coroutines-android"),
        #artifact("androidx.appcompat:appcompat:1.0.2"),
    ],
)


android_local_test(
  name = "all_tests",
  custom_package = "org.oppia.util",
  test_class = "org.oppia.util",
  deps = [
      ":dagger",
      ":test_lib",
      "@robolectric//bazel:android-all",
      artifact("org.robolectric:robolectric"),
      artifact("org.jetbrains.kotlinx:kotlinx-coroutines-core"),
      artifact("org.jetbrains.kotlinx:kotlinx-coroutines-android"),
      artifact("org.jetbrains.kotlinx:kotlinx-coroutines-test"),
      artifact("junit:junit"),
  ],
)
'''

dagger_rules()