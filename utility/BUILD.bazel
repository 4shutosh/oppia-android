# TODO(#1532): Rename file to 'BUILD' post-Gradle.
'''
This library contains utilities that all other modules, minus model, depend on.
It also contains Robolectric and JUnit tests for it's utilities.
In Bazel, Kotlin source files are built into a library using the kt_android_library() rule.
Kotlin test files must be built in their own kt_android_library() rule and added as a dependency to
an android_local_test() rule which configures instrumentation tests in Bazel.
'''

load("@io_bazel_rules_kotlin//kotlin:kotlin.bzl", "kt_android_library")
load("@rules_jvm_external//:defs.bzl", "artifact")
load("@dagger//:workspace_defs.bzl", "dagger_rules")
load("//:oppia_android_test.bzl", "oppia_android_test")
load("//utility:utility_test.bzl", "utility_test")

# Library for general-purpose utilities.
kt_android_library(
    name = "utility",
    custom_package = "org.oppia.util",
    srcs = glob(["src/main/java/org/oppia/util/**/*.kt"]),
    resource_files = glob(["src/main/res/**/*.xml"]),
    manifest = "src/main/AndroidManifest.xml",
    deps = [
        ":dagger",
        "//model",
        "//firebase:crashlytics",
        "//firebase:crashlytics_deps",
        artifact("org.jetbrains.kotlinx:kotlinx-coroutines-core"),
        artifact("androidx.appcompat:appcompat"),
        artifact("com.github.bumptech.glide:glide"),
        artifact("com.caverock:androidsvg-aar"),
    ],
    visibility = ["//visibility:public"],
)

kt_android_library(
    name = "utility_tests",
    custom_package = "org.oppia.util",
    srcs = glob(["src/test/java/org/oppia/util/**/*.kt"],),
    resource_files = glob(["src/main/res/**/*.xml"]),
    manifest = "src/test/AndroidManifest.xml",
    deps = [
        ":dagger",
        ":utility",
        "//testing",
        "//model",
        "//firebase:crashlytics",
        "//firebase:crashlytics_deps",
        artifact("org.jetbrains.kotlin:kotlin-test-junit"),
        artifact("com.google.truth:truth"),
        artifact("androidx.test.ext:junit"),
        artifact("org.mockito:mockito-core"),
    ],
    visibility = ["//visibility:public"],
)

utility_test(
   name = "AsyncResultTest",
   src = ["src/test/java/org/oppia/util/data/AsyncResultTest.kt"],
   test_class = "org.oppia.util.data.AsyncResultTest",
 )

utility_test(
    name = "DataProvidersTest",
    src = ["src/test/java/org/oppia/util/data/DataProvidersTest.kt"],
    test_class = "org.oppia.util.data.DataProvidersTest",
)

utility_test(
    name = "InMemoryBlockingCacheTest",
    src = ["src/test/java/org/oppia/util/data/InMemoryBlockingCacheTest.kt"],
    test_class = "org.oppia.util.data.InMemoryBlockingCacheTest",
)

utility_test(
    name = "DateTimeUtilTest",
    src = ["src/test/java/org/oppia/util/datetime/DateTimeUtilTest.kt"],
    test_class = "org.oppia.util.datetime.DateTimeUtilTest",
)

utility_test(
    name = "EventBundleCreatorTest",
    src = ["src/test/java/org/oppia/util/logging/EventBundleCreatorTest.kt"],
    test_class = "org.oppia.util.logging.EventBundleCreatorTest",
)

utility_test(
    name = "NetworkConnectionUtilTest",
    src = ["src/test/java/org/oppia/util/networking/NetworkConnectionUtilTest.kt"],
    test_class = "org.oppia.util.networking.NetworkConnectionUtilTest",
)

utility_test(
    name = "DirectoryManagementUtilTest",
    src = ["src/test/java/org/oppia/util/profile/DirectoryManagementUtilTest.kt"],
    test_class = "org.oppia.util.profile.DirectoryManagementUtilTest",
)

utility_test(
    name = "OppiaDateTimeFormatterTest",
    src = ["src/test/java/org/oppia/util/system/OppiaDateTimeFormatterTest.kt"],
    test_class = "org.oppia.util.system.OppiaDateTimeFormatterTest",
)

dagger_rules()
