load("@io_bazel_rules_kotlin//kotlin:kotlin.bzl", "kt_android_library")
load("@rules_jvm_external//:defs.bzl", "artifact")
load("@dagger//:workspace_defs.bzl", "dagger_rules")
load("//:oppia_android_test.bzl", "oppia_android_test")
load("//testing:testing_test.bzl", "testing_test")

kt_android_library(
     name = "testing_lib",
     custom_package = "org.oppia.testing",
     srcs = glob(["src/main/java/org/oppia/testing/*.kt"]),
     manifest = "src/main/AndroidManifest.xml",
     deps = [
         ":dagger",
         "//utility:utility_lib",
         artifact("org.robolectric:robolectric"),
         artifact("org.jetbrains.kotlinx:kotlinx-coroutines-android"),
         artifact("org.jetbrains.kotlinx:kotlinx-coroutines-test"),
     ],
     visibility = ["//visibility:public"]
 )


kt_android_library(
     name = "testing_test_lib",
     custom_package = "org.oppia.testing",
     srcs = glob(["src/test/java/org/oppia/testing/*.kt"]),
     manifest = "src/main/AndroidManifest.xml",
     deps = [
         ":testing_lib",
         ":dagger",
         artifact("com.google.truth:truth"),
         artifact("androidx.test.ext:junit"),
     ],
)

testing_test(
    name = "FakeEventLoggerTest",
    src = ["src/test/java/org/oppia/testing/FakeEventLoggerTest.kt"],
    test_class = "org.oppia.testing.FakeEventLoggerTest",
)

testing_test(
    name = "FakeExceptionLoggerTest",
    src = ["src/test/java/org/oppia/testing/FakeExceptionLoggerTest.kt"],
    test_class = "org.oppia.testing.FakeExceptionLoggerTest",
)

dagger_rules()
