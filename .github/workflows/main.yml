name: CI Lint and Tests

# Controls when the action will run. Triggers the workflow on pull request
# events or push events in the develop branch.
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      # Push events on develop branch
      - develop

# This workflow has the following jobs:
# linters: Kotlin and Protobuf Linting
# robolectric_tests: Robolectric tests for all modules except the app module
# app_tests: Non-flaky Robolectric tests for the app module
jobs:
  app_emulator_tests:
    name: Espresso Emulator Tests - App Module (Non-Flaky)
    runs-on: macos-10.15
    strategy:
      matrix:
        api-level: [29]
        target: [default]
        profile: [Nexus 6]
        #profile: [Pixel XL]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
         path: ~/.gradle/caches
         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-jars-{{ checksum "build.gradle" }}

      # Set up Java 8 since it's required for building binaries dependent on the Android SDK.
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.0.7

      - name: Set up platform tools
        run: sdkmanager platform-tools

      - name: Debug adb devices
        run: adb devices

      #- name: Debug run emulator tests directly
      #  run: scripts/run_emulator_tests.sh

      #- name: Set up Android SDK tools
      #  uses: android-actions/setup-android@v2.0.1

      - name: Run emulator tests
        uses: ReactiveCircus/android-emulator-runner@v2.11.0
        env:
          TEST_WHITELIST: "org.oppia.app.splash.SplashActivityTest"
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          profile: ${{ matrix.profile }}
          arch: x86_64
          # Note that 'sudo' is not run here since it will drop necessary
          # environmental variables that were overwritten above to ensure
          # correct access to the Android SDK & home directories.
          script: scripts/run_emulator_tests.sh

      # Upload all test results to GitHub (including detailed reports and videos, if any).
      - uses: actions/upload-artifact@v2
        with:
          name: oppia-bazel-apk
          path: /home/runner/work/oppia-android/emulator-tests

